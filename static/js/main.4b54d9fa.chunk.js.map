{"version":3,"sources":["features/filter.ts","features/currentTodo.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatus","actions","todo","type","payload","currentTodoReducer","state","action","status","defaultFilter","query","ALL","filterReducer","filter","ACTIVE","COMPLETED","todosReducer","todos","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","dispatch","visibleTodos","filteredTodos","completed","title","toLowerCase","includes","getVisibleTodos","length","className","map","id","classNames","onClick","currentTodoActions","JSON","stringify","Date","TodoFilter","useState","selectValue","setSelectValue","inputValue","setInputValue","onSubmit","event","preventDefault","value","onChange","e","currentTarget","filterActions","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","setUser","isLoading","setIsLoading","useEffect","userId","href","email","name","App","item","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b54d9fa.chunk.js","sourcesContent":["export enum FilterStatus {\n  ALL = 'ALL',\n  COMPLETED = 'COMPLETED',\n  ACTIVE = 'ACTIVE',\n}\n\ntype Filter = {\n  query: string,\n  status: FilterStatus,\n};\n\ntype AllAction = {\n  type: 'ALL',\n  payload: string,\n};\n\ntype ActiveAction = {\n  type: 'ACTIVE',\n  payload: string,\n};\n\ntype CompletedAction = {\n  type: 'COMPLETED',\n  payload: string,\n};\n\ntype Action = AllAction | ActiveAction | CompletedAction;\n\nconst setFilter = (status: string, payload: string): Action => {\n  switch (status) {\n    case 'ALL':\n      return {\n        type: 'ALL',\n        payload,\n      };\n\n    case 'ACTIVE':\n      return {\n        type: 'ACTIVE',\n        payload,\n      };\n\n    case 'COMPLETED':\n      return {\n        type: 'COMPLETED',\n        payload,\n      };\n\n    default:\n      return {\n        type: 'ALL',\n        payload: '',\n      };\n  }\n};\n\nconst setQuery = (payload: string, type: FilterStatus) => {\n  return {\n    type,\n    payload,\n  };\n};\n\nexport const actions = { setFilter, setQuery };\n\nconst defaultFilter = {\n  query: '',\n  status: FilterStatus.ALL,\n};\n\nconst filterReducer = (filter: Filter = defaultFilter, action: Action) => {\n  switch (action.type) {\n    case 'ALL':\n      return {\n        query: action.payload,\n        status: FilterStatus.ALL,\n      };\n\n    case 'ACTIVE':\n      return {\n        query: action.payload,\n        status: FilterStatus.ACTIVE,\n      };\n\n    case 'COMPLETED':\n      return {\n        query: action.payload,\n        status: FilterStatus.COMPLETED,\n      };\n\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Todo } from '../types/Todo';\n\ntype CreateAction = {\n  type: 'todos/CREATE',\n  payload: Todo[],\n};\n\ntype AddAction = {\n  type: 'todos/ADD',\n  payload: Todo,\n};\n\ntype Action = CreateAction | AddAction;\n\nconst create = (todos: Todo[]): CreateAction => ({\n  type: 'todos/CREATE',\n  payload: todos,\n});\n\nconst add = (todo: Todo): AddAction => ({\n  type: 'todos/ADD',\n  payload: todo,\n});\n\nexport const actions = { create, add };\n\nconst todosReducer = (todos: Todo[] = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/CREATE':\n      return [...todos];\n\n    case 'todos/ADD':\n      return [...todos, action.payload];\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { FilterStatus } from '../../features/filter';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const filter = useAppSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const getVisibleTodos = () => {\n    let filteredTodos: Todo[] = [];\n\n    switch (filter.status) {\n      case FilterStatus.ALL:\n        filteredTodos = todos;\n        break;\n\n      case FilterStatus.ACTIVE:\n        filteredTodos = [...todos].filter(todo => !todo.completed);\n        break;\n\n      case FilterStatus.COMPLETED:\n        filteredTodos = [...todos].filter(todo => todo.completed);\n        break;\n\n      default:\n        return todos;\n    }\n\n    const todosByQuery = filteredTodos.filter((todo: Todo) => (\n      todo.title.toLowerCase().includes(filter.query.toLowerCase())\n    ));\n\n    return todosByQuery;\n  };\n\n  const visibleTodos = getVisibleTodos();\n\n  return (\n    <>\n      {visibleTodos.length === 0\n        && (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visibleTodos.map(todo => (\n            <tr data-cy=\"todo\" key={todo.id + JSON.stringify(new Date())}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span>\n                  )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(\n                  { 'has-text-danger': !todo.completed },\n                  { 'has-text-success': todo.completed },\n                )}\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    dispatch(currentTodoActions.setTodo(todo));\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const [selectValue, setSelectValue] = useState('all');\n  const [inputValue, setInputValue] = useState('');\n  const filter = useAppSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={(e) => {\n              setSelectValue(e.currentTarget.value);\n\n              if (e.currentTarget.value === 'ALL') {\n                dispatch(filterActions.setFilter('ALL', inputValue));\n              }\n\n              if (e.currentTarget.value === 'ACTIVE') {\n                dispatch(filterActions.setFilter('ACTIVE', inputValue));\n              }\n\n              if (e.currentTarget.value === 'COMPLETED') {\n                dispatch(filterActions.setFilter('COMPLETED', inputValue));\n              }\n            }}\n          >\n            <option value=\"ALL\">All</option>\n            <option value=\"ACTIVE\">Active</option>\n            <option value=\"COMPLETED\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={inputValue}\n          onChange={(e) => {\n            setInputValue(e.currentTarget.value);\n            dispatch(filterActions\n              .setQuery(e.currentTarget.value, filter.status));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue.length > 0\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setInputValue('');\n                  dispatch(filterActions.setFilter(selectValue, inputValue));\n                }}\n              />\n            </span>\n          )}\n\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const dispatch = useDispatch();\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(res => {\n        setUser(res);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading\n        && <Loader />}\n\n      {!isLoading && user\n        && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  dispatch(currentTodoActions.removeTodo());\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{todo.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {!todo.completed\n                && <strong className=\"has-text-danger\">Planned</strong>}\n\n                {todo.completed\n                && <strong className=\"has-text-success\">Done</strong>}\n                {' by '}\n                <a href={user.email}>{user.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { actions as todosActions } from './features/todos';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    getTodos().then(res => {\n      res.map(item => dispatch(todosActions.add(item)));\n\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo\n        && <TodoModal todo={currentTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}